---
name: infra-manager

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths:
      - 'foundations/**'
      - scripts/infra-manager-wrapper.sh
  push:
    branches:
      - main
    paths:
      - 'foundations/**'
      - scripts/infra-manager-wrapper.sh

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  TFPLANDOC_VERSION: 0.4.1
  # These values define the properties used by Infrastructure Manager
  DEPLOYMENT_ID: emes-im-tst
  DEPLOYMENT_PROJECT_ID: ${{ vars.PROJECT_ID }}
  DEPLOYMENT_REGION: us-west1
  DEPLOYMENT_LABELS: "owner=emes,email=m_dot_emes_at_f5_dot_com"
  DEPLOYMENT_TF_VERSION: "1.5.7"
  DEPLOYMENT_SERVICE_ACCOUNT_NAME: "projects/${{ vars.PROJECT_ID }}/serviceAccounts/${{ secrets.IAC_SERVICE_ACCOUNT }}"

jobs:
  infra-manager:
    runs-on: ubuntu-latest
    env:
      DEPLOYMENT_GIT_URL: "${{ github.server_url }}/${{ github.repository }}"
      DEPLOYMENT_GIT_SHA: "${{ github.sha }}"
      DEPLOYMENT_GIT_REF: "${{ github.head_ref || github.ref_name }}"
      DEPLOYMENT_GIT_SOURCE_DIRECTORY: foundations
      DEPLOYMENT_INPUTS_FILE: "${{ github.sha }}.tfvars"
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.PROJECT_ID }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
      - uses: google-github-actions/setup-gcloud@v2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "${{ env.DEPLOYMENT_TF_VERSION}}"
      - name: Create local terraform variables file
        # NOTE: This file defines the inputs for the Terraform executed by Infrastructure Manager
        run: |
          cat <<'EOF' > ${{ env.DEPLOYMENT_INPUTS_FILE }}
          # Autogenerated by ${{ github.workflow }} workflow
          project_id = "${{ env.DEPLOYMENT_PROJECT_ID }}"
          name       = "${{ env.DEPLOYMENT_ID }}"
          region     = "${{ env.DEPLOYMENT_REGION }}"
          repository = "${{ vars.OCI_REGISTRY }}"
          labels     = {
            owner   = "emes"
            email   = "m_dot_emes_at_f5_dot_com"
            purpose = "testing"
            product = "f5-aigw"
          }
          EOF
      - name: Generate preview plan
        if: ${{ success() && github.event_name == 'pull_request' }}
        run: ./scripts/infra-manager-wrapper.sh plan
      - name: Generate markdown summary of plan
        if: ${{ success() && github.event_name == 'pull_request' }}
        run: |
          curl -fsSLO https://github.com/Azure/tfplandoc/releases/download/v${{ env.TFPLANDOC_VERSION }}/tfplandoc_${{ env.TFPLANDOC_VERSION }}_linux_amd64.zip
          unzip tfplandoc_${{ env.TFPLANDOC_VERSION }}_linux_amd64.zip tfplandoc_v${{ env.TFPLANDOC_VERSION }}
          ./tfplandoc_v${{ env.TFPLANDOC_VERSION }} generate "${{ github.sha }}.json" > "${{ github.sha }}.md"
      - name: Add markdown output as comment
        if: ${{ success() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('${{ github.sha }}.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: plan
            })
      - name: Apply changes
        if: ${{ success() && github.event_name == 'push' }}
        run: ./scripts/infra-manager-wrapper.sh apply
