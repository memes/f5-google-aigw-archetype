---
name: infra-manager

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths:
      - 'foundations/**'
  push:
    branches:
      - main
    paths:
      - 'foundations/**'

permissions:
  contents: read
  id-token: write
  pull-requests: read

env:
  DEPLOYMENT_NAME: emes-im-tst
  DEPLOYMENT_PROJECT_ID: ${{ var.PROJECT_ID }}
  DEPLOYMENT_REGION: us-west1
  DEPLOYMENT_LABELS: |
    {
      owner = "emes"
      email = "m_dot_emes_at_f5_dot_com"
    }
  TF_VERSION: "1.5.7"

jobs:
  infra-manager:
    runs-on: ubuntu-latest
    env:
      # yamllint disable-line rule:line-length
      DEPLOYMENT_NAME: "projects/${{ var.PROJECT_ID }}/locations/${{ env.DEPLOYMENT_LOCATION }}/deployments/${{ env.DEPLOYMENT_NAME }}"
      IAC_SERVICE_ACCOUNT_NAME: "projects/${{ var.PROJECT_ID}/serviceAccounts/${{ secret.IAC_SERVICE_ACCOUNT }}"
      GITHUB_URL: "${{ github.repositoryUrl }}"
      GITHUB_SHA: "${{ github.sha }}"
      SOURCE_DIRECTORY: foundations
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ var.PROJECT_ID }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
      - uses: google-github-actions/setup-gcloud@v2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "${{ env.TF_VERSION}}"
      - name: Create local terraform variables file
        run: |
          cat <<'EOF' > ${{ github.sha }}.tfvars
          project_id = "${{ var.DEPLOYMENT_PROJECT_ID }}"
          name       = "${{ env.DEPLOYMENT_NAME }}"
          region     = "${{ env.DEPLOYMENT_REGION }}"
          labels.    = ${{ env.DEPLOYMENT_LABELS }}
          registry   = "${{ var.OCI_REGISTRY }}"
          EOF
      - name: Generate preview
        if: ${{ github.event_name == 'pull_request' }}
        env:
          # yamllint disable-line rule:line-length
          PREVIEW_NAME: "projects/${{ var.PROJECT_ID }}//locations/${{ env.DEPLOYMENT_LOCATION }}/previews/${GITHUB_SHA}"
        run: ./scripts/infra-manager-wrapper.sh plan
      - name: Add plan as comment
        if: ${{ success() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync("${{ github.sha }}.txt");
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: content.repo.repo,
              body: plan
            })
      - name: Apply changes
        if: ${{ success() && github.event_name == 'push' }}
        run: ./scripts/infra-manager-wrapper.sh apply
